<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-02-25 at 12:20:11.
 */

include '../roman.php';

class romanTest extends PHPUnit_Framework_TestCase {

    /**
     * @var roman
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new roman;
    }

    public function testTest1() {
        $this->assertEquals("I", $this->object->convertToRoman(1));
    }

    public function testTest2() {
        $this->assertEquals("II", $this->object->convertToRoman(2));
    }

    public function testTest3() {
        $this->assertEquals("III", $this->object->convertToRoman(3));
    }

    public function testTest4() {
        $this->assertEquals("V", $this->object->convertToRoman(5));
    }

    public function testTest5() {
        $this->assertEquals("IV", $this->object->convertToRoman(4));
    }

    public function testTest6() {
        $this->assertEquals("VI", $this->object->convertToRoman(6));
    }

    public function testTest7() {
        $this->assertEquals("VII", $this->object->convertToRoman(7));
    }

    public function testTest8() {
        $this->assertEquals("VIII", $this->object->convertToRoman(8));
    }

    public function testTest9() {
        $this->assertEquals("IX", $this->object->convertToRoman(9));
    }

    public function testTest10() {
        $this->assertEquals("X", $this->object->convertToRoman(10));
    }

    public function testTest11() {
        $this->assertEquals("XI", $this->object->convertToRoman(11));
    }

    public function testTest12() {
        $this->assertEquals("XII", $this->object->convertToRoman(12));
    }

    public function testTest13() {
        $this->assertEquals("XIII", $this->object->convertToRoman(13));
    }

    public function testTest14() {
        $this->assertEquals("XIV", $this->object->convertToRoman(14));
    }

    public function testTest15() {
        $this->assertEquals("XV", $this->object->convertToRoman(15));
        $this->assertEquals("XVI", $this->object->convertToRoman(16));
        $this->assertEquals("XVII", $this->object->convertToRoman(17));
        $this->assertEquals("XVIII", $this->object->convertToRoman(18));
        $this->assertEquals("XIX", $this->object->convertToRoman(19));
    }

    public function testTest20() {
        $this->assertEquals("XX", $this->object->convertToRoman(20));
        $this->assertEquals("XXI", $this->object->convertToRoman(21));
        $this->assertEquals("XXII", $this->object->convertToRoman(22));
        $this->assertEquals("XXIII", $this->object->convertToRoman(23));
        $this->assertEquals("XXIV", $this->object->convertToRoman(24));
        $this->assertEquals("XXV", $this->object->convertToRoman(25));
        $this->assertEquals("XXVI", $this->object->convertToRoman(26));
        $this->assertEquals("XXVII", $this->object->convertToRoman(27));
        $this->assertEquals("XXVIII", $this->object->convertToRoman(28));
        $this->assertEquals("XXIX", $this->object->convertToRoman(29));
    }

    public function testTest30() {
        $this->assertEquals("XXX", $this->object->convertToRoman(30));
        $this->assertEquals("XXXI", $this->object->convertToRoman(31));
        $this->assertEquals("XXXII", $this->object->convertToRoman(32));
        $this->assertEquals("XXXIII", $this->object->convertToRoman(33));
        $this->assertEquals("XXXIV", $this->object->convertToRoman(34));
        $this->assertEquals("XXXV", $this->object->convertToRoman(35));
        $this->assertEquals("XXXVI", $this->object->convertToRoman(36));
        $this->assertEquals("XXXVII", $this->object->convertToRoman(37));
        $this->assertEquals("XXXVIII", $this->object->convertToRoman(38));
        $this->assertEquals("XXXIX", $this->object->convertToRoman(39));
    }

    public function testTest40() {
        $this->assertEquals("XL", $this->object->convertToRoman(40));
        $this->assertEquals("XLI", $this->object->convertToRoman(41));
        $this->assertEquals("XLVI", $this->object->convertToRoman(46));
        $this->assertEquals("XLIX", $this->object->convertToRoman(49));
    }

    public function testTest41() {
        $this->assertEquals("L", $this->object->convertToRoman(50));
        $this->assertEquals("LXI", $this->object->convertToRoman(61));
        $this->assertEquals("LXXVI", $this->object->convertToRoman(76));
        $this->assertEquals("LXXXIX", $this->object->convertToRoman(89));
    }
    public function testTest42() {
        $this->assertEquals("C", $this->object->convertToRoman(100));
        $this->assertEquals("CCI", $this->object->convertToRoman(201));
        $this->assertEquals("CCCIV", $this->object->convertToRoman(304));
        $this->assertEquals("CDXLIX", $this->object->convertToRoman(449));
        $this->assertEquals("D", $this->object->convertToRoman(500));
        $this->assertEquals("CM", $this->object->convertToRoman(900));
    }
    
    public function testTest43() {
        $this->assertEquals("M", $this->object->convertToRoman(1000));
        $this->assertEquals("MI", $this->object->convertToRoman(1001));
        $this->assertEquals("MII", $this->object->convertToRoman(1002));
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

}
